apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "danielsdev/hello-go:v2.0"
          resources:
            requests:
              cpu: 100m
              memory: 20Mi
            limits:
              cpu: 500m
              memory: 25Mi

          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            periodSeconds: 3
            failureThreshold: 30

          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            periodSeconds: 3
            failureThreshold: 1
            # initialDelaySeconds: 10
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            periodSeconds: 5
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1
            # initialDelaySeconds: 15

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret

          # env:
          #   - name: NAME
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: NAME

          volumeMounts:
            - mountPath: "/data"
              name: config
              readOnly: true
            - mountPath: "/go/pvc"
              name: goserver-volume
      
      volumes:
        - name: goserver-volume
          persistentVolumeClaim:
            claimName: goserver-pvc

        - name: config
          configMap:
            name: goserver-names
            items:
            - key: names
              path: "names.txt"
      